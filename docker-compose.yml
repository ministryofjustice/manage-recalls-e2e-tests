version: '3.1'
services:

  redis:
    image: 'bitnami/redis:5.0'
    networks:
      - manage-recalls-e2e
    container_name: redis-e2e
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'

  gotenberg:
    image: thecodingmachine/gotenberg:7.5.0
    container_name: gotenberg-e2e
    ports:
      - "9093:3000"
    networks:
      - manage-recalls-e2e

  hmpps-auth:
    build:
      context: ./fake-hmpps-auth/
    networks:
      - manage-recalls-e2e
    container_name: fake-hmpps-auth-e2e
    ports:
      - "9090:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]

  fake-prisoner-offender-search-api:
    image: quay.io/hmpps/ppud-fake-prisoner-offender-search-api:latest
    networks:
      - manage-recalls-e2e
    container_name: fake-prisoner-offender-search-api-e2e
    ports:
      - "9092:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    command: --verbose

  fake-prison-api:
    image: quay.io/hmpps/ppud-fake-prison-api:latest
    networks:
      - manage-recalls-e2e
    container_name: fake-prison-api-e2e
    ports:
      - "9097:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    command: --verbose

  fake-prison-register-api:
    image: quay.io/hmpps/ppud-fake-prison-register-api:latest
    networks:
      - manage-recalls-e2e
    container_name: fake-prison-register-api-e2e
    ports:
      - "9094:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    command: --verbose --local-response-templating

  fake-court-register-api:
    image: quay.io/hmpps/ppud-fake-court-register-api:latest
    networks:
      - manage-recalls-e2e
    container_name: fake-court-register-api-e2e
    ports:
      - "9095:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    command: --verbose --local-response-templating

  fake-os-places-api:
    image: quay.io/hmpps/ppud-fake-os-places-api:latest
    networks:
      - manage-recalls-e2e
    container_name: fake-os-places-api-e2e
    ports:
      - "9096:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    command: --verbose --local-response-templating

  manage-recalls-api:
    image: quay.io/hmpps/manage-recalls-api:latest
    networks:
      - manage-recalls-e2e
    container_name: manage-recalls-api-e2e
    depends_on: [gotenberg, fake-prisoner-offender-search-api, fake-prison-api, fake-prison-register-api, fake-court-register-api, postgres, minio]
    ports:
      - "9091:8080"
      - "9081:8081"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - OAUTH_ENDPOINT_URL=http://hmpps-auth:8080/auth
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://hmpps-auth:8080/auth/.well-known/jwks.json
      - PRISONERSEARCH_ENDPOINT_URL=http://fake-prisoner-offender-search-api:8080
      - PRISONREGISTER_ENDPOINT_URL=http://fake-prison-register-api:8080
      - PRISONAPI_ENDPOINT_URL=http://fake-prison-api:8080
      - COURTREGISTER_ENDPOINT_URL=http://fake-court-register-api:8080
      - GOTENBERG_ENDPOINT_URL=http://gotenberg:3000
      - POSTGRES_HOST=postgres:5432
      - POSTGRES_DBNAME=manage_recalls
      - POSTGRES_USERNAME=ppud_user
      - POSTGRES_PASSWORD=secret
      - AWS_LOCAL_ENDPOINT=http://minio:4566
      - RETURNTOCUSTODY_UPDATETHRESHOLDMINUTES=5

  manage-recalls-ui:
    image: quay.io/hmpps/manage-recalls-ui:latest
    networks:
      - manage-recalls-e2e
    container_name: manage-recalls-ui-e2e
    depends_on: [redis, hmpps-auth, manage-recalls-api, fake-os-places-api]
    ports:
      - "3000:3000"
      - "3001:3001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/ping" ]
    environment:
      - NODE_ENV=dev
      - REDIS_HOST=redis
      - INGRESS_URL=http://localhost:3000
      - HMPPS_AUTH_EXTERNAL_URL=http://localhost:9090/auth
      - HMPPS_AUTH_URL=http://hmpps-auth:8080/auth
      - MANAGE_RECALLS_API_URL=http://manage-recalls-api:8080
      - API_CLIENT_ID=ppud-ui-client
      - API_CLIENT_SECRET=clientsecret
      - SYSTEM_CLIENT_ID=system-client-id
      - SYSTEM_CLIENT_SECRET=system-client-secret
      - SESSION_SECRET=session-secret
      - OS_PLACES_API_URL=http://fake-os-places-api:8080/search/places/v1
      - OS_PLACES_API_KEY=key

  postgres:
    image: postgres:13-alpine
    container_name: postgres_manage-recalls-e2e
    ports:
      - "5432:5432"
    networks:
      - manage-recalls-e2e
    environment:
      - POSTGRES_PASSWORD=secret
      - POSTGRES_USER=ppud_user
      - POSTGRES_DB=manage_recalls

  minio:
    image: minio/minio:RELEASE.2022-01-28T02-28-16Z
    container_name: minio_manage-recalls-e2e
    ports:
      - 4566:4566
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=ANYTHING_GOES
      - MINIO_ROOT_PASSWORD=ANYTHING_GOES
      - MINIO_DEFAULT_BUCKETS=test-manage-recalls-api
    networks:
      - manage-recalls-e2e
    entrypoint: sh
    command: -c 'mkdir -p /data/test-manage-recalls-api && /opt/bin/minio server /data --address ":4566" --console-address ":9001"'

  clamav:
    image: ghcr.io/ministryofjustice/hmpps-clamav-freshclammed
    networks:
      - manage-recalls-e2e
    container_name: clamav_manage-recalls-e2e
    ports:
      - "3310:3310"
    deploy:
      resources:
        limits:
          memory: 2G

networks:
  manage-recalls-e2e:
