version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.2
  node: circleci/node@5.0.0

parameters:
  invoked-by:
    type: string
    default: repo
  check-docker:
    type: boolean
    default: true
  check-dev:
    type: boolean
    default: true
  check-preprod:
    type: boolean
    default: false

jobs:
  check-docker:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: large
    steps:
      - checkout
      - run:
          name: Build and pull docker containers
          command: |
            docker-compose build
            docker-compose pull
      - run:
          name: Docker compose
          command: |
            set -x
            docker-compose up -d
      - restore_cache:
          keys:
            - v2-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
            - v2-deps-{{ arch }}-{{ .Branch }}
            - v2-deps-{{ arch }}
      - run:
          name: Install correct node/npm
          command: |
            node_version=$(jq -r '.engines.node' <package.json)
            nvm install $node_version
            nvm alias default $node_version
            node -v

            npm install -g npm@$(jq -r '.engines.npm' <package.json)
            npm -v
      - run:
          name: Install NPM dependencies
          command: |
            nvm use $(jq -r '.engines.node' <package.json)
            npm ci
      - save_cache:
          key: v2-deps-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
          paths:
            - ~/.npm
            - ~/.cache
      - run:
          name: Check HMPPS Auth is running
          command: |
            docker run --network host \
              docker.io/jwilder/dockerize \
              -wait http://localhost:9090/auth/health \
              -wait-retry-interval 2s \
              -timeout 60s
      - run:
          name: Run Cypress tests
          command: |
            nvm use $(jq -r '.engines.node' <package.json)
            npx cypress run --config baseUrl=http://localhost:3000 --record false --key e883dffd-b644-4431-989d-0181ae34d0e6 --browser chrome
      - run:
          name: "Failure: output container logs to console"
          command: |
            docker-compose logs
          when: on_fail
      - run:
          name: Cypress report
          command: |
            nvm use $(jq -r '.engines.node' <package.json)
            npm run cypress:report
      - run:
          name: Stop docker containers
          command: docker-compose stop
      - store_artifacts:
          path: cypress/screenshots
          destination: screenshots
      - store_artifacts:
          path: cypress/reports
          destination: reports

  check-env:
    docker:
      - image: cypress/browsers:node16.13.2-chrome97-ff96
    resource_class: large
    parallelism: 2
    parameters:
      environment:
        type: string
        default: dev
    steps:
      - checkout
      - run:
          name: Update NPM to match package.json
          command: apt install -y jq && npm install -g npm@$(jq -r '.engines.npm' < package.json)
      - node/install-packages
      - run:
          name: Wait for exclusive lock [check-<< parameters.environment >>-<< pipeline.parameters.invoked-by >>]
          command:
            ./scripts/do-exclusively --job check-<< parameters.environment >>-<< pipeline.parameters.invoked-by >> echo "Kicking off cypress tests..."
      - run:
          name: Run Cypress tests [<< parameters.environment >> - invoked by << pipeline.parameters.invoked-by >>]
          command: |
            SPECS=$(circleci tests glob cypress/integration/*.feature | circleci tests split)
            echo "Running feature spec(s): ${SPECS}"

            set +e

            npx cypress run \
              --env USERNAME=${CYPRESS_USERNAME_<< pipeline.parameters.invoked-by >>_<< parameters.environment >>},PASSWORD=${CYPRESS_PASSWORD_<< pipeline.parameters.invoked-by >>_<< parameters.environment >>},NOMS_NUMBER=${NOMS_NUMBER_<< parameters.environment >>} \
              --config baseUrl=https://manage-recalls-<< parameters.environment >>.hmpps.service.justice.gov.uk \
              --browser chrome \
              --spec $SPECS

            export E2E_RESULT=$?
            npm run cypress:report

            set -e
            exit $E2E_RESULT
      - store_artifacts:
          path: cypress/screenshots
          destination: screenshots
      - store_artifacts:
          path: cypress/reports
          destination: reports
      - store_test_results:
          path: cypress/reports

workflows:
  version: 2
  check-docker:
    when: << pipeline.parameters.check-docker >>
    jobs:
      - check-docker

  check-dev:
    when: << pipeline.parameters.check-dev >>
    jobs:
      - check-env:
          name: check-dev-<< pipeline.parameters.invoked-by >>
          environment: dev

  check-preprod:
    when: << pipeline.parameters.check-preprod >>
    jobs:
      - check-env:
          name: check-preprod-<< pipeline.parameters.invoked-by >>
          environment: preprod
