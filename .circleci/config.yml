version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.2

parameters:
  only_run_deploy_check:
    type: boolean
    default: false
  e2e_environment:
    type: string
    default: dev

executors:
  local-docker:
    docker:
      - image: cimg/python:3.9
    working_directory: ~/app

jobs:
  local-check:
    executor: local-docker
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Build and pull docker containers
          command: |
            docker pull quay.io/hmpps/manage-recalls-e2e-tests:latest
            docker-compose -f docker-compose.yml -f docker-compose.ci.yml build --no-cache
            docker-compose -f docker-compose.yml -f docker-compose.ci.yml pull
      - run:
          name: Start docker compose and run the end-to-end tests
          command: |
            set -x
            docker-compose -f docker-compose.yml -f docker-compose.ci.yml up --exit-code-from manage-recalls-e2e-test-runner manage-recalls-e2e-test-runner || {
              export exit_code=1
            }
            mkdir logs
            docker logs manage-recalls-ui-e2e > logs/manage-recalls-ui.log
            docker logs manage-recalls-api-e2e > logs/manage-recalls-api.log
            docker logs minio_manage-recalls-e2e > logs/minio_manage-recalls-e2e.log
            docker cp manage-recalls-e2e-test-runner:/home/circleci/project/build/reports/tests/test/ test-report
            docker cp manage-recalls-e2e-test-runner:/home/circleci/project/target/site/serenity/ serenity-report
            exit $exit_code
      - store_artifacts:
          path: logs
          destination: logs
      - store_artifacts:
          path: test-report
          destination: local-test-summary
      - store_artifacts:
          path: serenity-report
          destination: local-serenity-report
      - run:
          name: Stop docker containers
          command: docker-compose stop

  deploy-check:
    docker:
      - image: quay.io/hmpps/manage-recalls-e2e-tests:latest
    environment:
      ENVIRONMENT: <<pipeline.parameters.e2e_environment>>
    steps:
      - checkout
      - run:
          name: "Run Gradle tests [<<pipeline.parameters.e2e_environment>>]"
          command: |
            set +e
            SERENITY_USERNAME=${SERENITY_USERNAME_<<pipeline.parameters.e2e_environment>>} \
            SERENITY_PASSWORD=${SERENITY_PASSWORD_<<pipeline.parameters.e2e_environment>>} \
            NOMS_NUMBER=${NOMS_NUMBER_<<pipeline.parameters.e2e_environment>>} \
            ./gradlew test -Denvironment=${ENVIRONMENT}
            export E2E_RESULT=$?
            set -e

            ./report-results-to-dashboard.sh
            exit $E2E_RESULT
      - store_artifacts:
          path: build/reports/tests/test
          destination: deploy-test-summary
      - store_artifacts:
          path: target/site/serenity/
          destination: deploy-serenity-report

  deploy-check-cypress:
    resource_class: large
    docker:
      - image: quay.io/hmpps/manage-recalls-e2e-tests:latest
    working_directory: /mnt/ramdisk
    environment:
      ENVIRONMENT: <<pipeline.parameters.e2e_environment>>
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
            - v1-deps-{{ .Branch }}
            - v1-deps
      - run:
          name: Install Dependencies
          command: npm ci
      - save_cache:
          key: v1-deps-{{ .Branch }}-{{ checksum "package.json" }}
          # cache NPM modules and the folder with the Cypress binary
          paths:
            - ~/.npm
            - ~/.cache
      - run:
          name: "Run Cypress tests [<<pipeline.parameters.e2e_environment>>]"
          command: |
            set +e
            npm i
            npx cypress run --env USERNAME=${CYPRESS_USERNAME_<<pipeline.parameters.e2e_environment>>},PASSWORD=${CYPRESS_PASSWORD_<<pipeline.parameters.e2e_environment>>},NOMS_NUMBER=${NOMS_NUMBER_<<pipeline.parameters.e2e_environment>>} --config baseUrl=https://manage-recalls-<<pipeline.parameters.e2e_environment>>.hmpps.service.justice.gov.uk
            export E2E_RESULT=$?
            npm run cypress:report
            set -e
            exit $E2E_RESULT
      - store_artifacts:
          path: cypress/screenshots
          destination: screenshots
      - store_artifacts:
          path: cypress/reports
          destination: reports

workflows:
  version: 2
  dev_and_local:
    when:
      not: << pipeline.parameters.only_run_deploy_check >>
    jobs:
      - local-check
      - deploy-check
      - deploy-check-cypress
  deploy_only:
    when: << pipeline.parameters.only_run_deploy_check >>
    jobs:
      - deploy-check
      - deploy-check-cypress

  build_docker:
    when:
      not: << pipeline.parameters.only_run_deploy_check >>
    jobs:
      - build-docker-approval:
          type: approval
      - hmpps/build_docker:
          requires: [build-docker-approval]
          dockerfile_dir: circle-ci-browser-docker
